Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/jupyter_core/utils/__init__.py", line 154, in wrapped
    asyncio.get_running_loop()
RuntimeError: no running event loop

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/nbclient/client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/jupyter_core/utils/__init__.py", line 158, in wrapped
    return loop.run_until_complete(inner)
  File "/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from causalkit.data import CausalDatasetGenerator, CausalData

# Reproducibility
np.random.seed(42)

confounder_specs = [
    {"name": "tenure_months", "dist": "normal", "mu": 24, "sd": 12},
    {"name": "avg_sessions_week", "dist": "normal", "mu": 5, "sd": 2},
    {"name": "spend_last_month", "dist": "uniform", "a": 0, "b": 200},
    {"name": "premium_user", "dist": "bernoulli", "p": 0.25},
    {"name": "urban_resident", "dist": "bernoulli", "p": 0.60},
]

# Causal effect and noise
theta = 1.8  # ATE: +1.8 ARPU units if new_feature = 1
sigma_y = 3.5  # ARPU noise std
target_t_rate = 0.35  # ~35% treated

# Effects of confounders on ARPU (baseline, additive)
# Order: tenure_months, avg_sessions_week, spend_last_month, premium_user, urban_resident
beta_y = np.array([
    0.05,  # tenure_months: small positive effect
    0.40,  # avg_sessions_week: strong positive effect
    0.02,  # spend_last_month: recent spend correlates with ARPU
    2.00,  # premium_user: premium users have higher ARPU
    1.00,  # urban_resident: urban users slightly higher ARPU
], dtype=float)

# Effects of confounders on treatment assignment (log-odds scale)
beta_t = np.array([
    0.015,  # tenure_months
    0.10,  # avg_sessions_week
    0.002,  # spend_last_month
    0.75,  # premium_user
    0.30,  # urban_resident: more likely to get the feature
], dtype=float)

gen = CausalDatasetGenerator(
    theta=theta,
    outcome_type="continuous",
    sigma_y=sigma_y,
    target_t_rate=target_t_rate,
    seed=42,
    confounder_specs=confounder_specs,
    beta_y=beta_y,
    beta_t=beta_t,
)


# Create dataset
causal_data = gen.to_causal_data(
    n=10000,
    confounders = [
    "tenure_months",
    "avg_sessions_week",
    "spend_last_month",
    "premium_user",
    "urban_resident",
]
)

# Show first few rows
causal_data.df.head()

------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mModuleNotFoundError[0m                       Traceback (most recent call last)
Cell [0;32mIn[1], line 4[0m
[1;32m      2[0m [38;5;28;01mimport[39;00m[38;5;250m [39m[38;5;21;01mpandas[39;00m[38;5;250m [39m[38;5;28;01mas[39;00m[38;5;250m [39m[38;5;21;01mpd[39;00m
[1;32m      3[0m [38;5;28;01mimport[39;00m[38;5;250m [39m[38;5;21;01mmatplotlib[39;00m[38;5;21;01m.[39;00m[38;5;21;01mpyplot[39;00m[38;5;250m [39m[38;5;28;01mas[39;00m[38;5;250m [39m[38;5;21;01mplt[39;00m
[0;32m----> 4[0m [38;5;28;01mfrom[39;00m[38;5;250m [39m[38;5;21;01mcausalkit[39;00m[38;5;21;01m.[39;00m[38;5;21;01mdata[39;00m[38;5;250m [39m[38;5;28;01mimport[39;00m CausalDatasetGenerator, CausalData
[1;32m      6[0m [38;5;66;03m# Reproducibility[39;00m
[1;32m      7[0m np[38;5;241m.[39mrandom[38;5;241m.[39mseed([38;5;241m42[39m)

File [0;32m~/work/CausalKit/CausalKit/causalkit/__init__.py:28[0m
[1;32m     26[0m [38;5;28;01mfrom[39;00m[38;5;250m [39m[38;5;21;01mcausalkit[39;00m[38;5;250m [39m[38;5;28;01mimport[39;00m data
[1;32m     27[0m [38;5;28;01mfrom[39;00m[38;5;250m [39m[38;5;21;01mcausalkit[39;00m[38;5;250m [39m[38;5;28;01mimport[39;00m design
[0;32m---> 28[0m [38;5;28;01mfrom[39;00m[38;5;250m [39m[38;5;21;01mcausalkit[39;00m[38;5;250m [39m[38;5;28;01mimport[39;00m inference
[1;32m     30[0m __version__ [38;5;241m=[39m [38;5;124m"[39m[38;5;124m0.1.0[39m[38;5;124m"[39m
[1;32m     31[0m __all__ [38;5;241m=[39m [[38;5;124m"[39m[38;5;124mdata[39m[38;5;124m"[39m, [38;5;124m"[39m[38;5;124mdesign[39m[38;5;124m"[39m, [38;5;124m"[39m[38;5;124minference[39m[38;5;124m"[39m]

File [0;32m~/work/CausalKit/CausalKit/causalkit/inference/__init__.py:11[0m
[1;32m      9[0m [38;5;28;01mfrom[39;00m[38;5;250m [39m[38;5;21;01mcausalkit[39;00m[38;5;21;01m.[39;00m[38;5;21;01minference[39;00m[38;5;21;01m.[39;00m[38;5;21;01matt[39;00m[38;5;21;01m.[39;00m[38;5;21;01mconversion_z_test[39;00m[38;5;250m [39m[38;5;28;01mimport[39;00m conversion_z_test
[1;32m     10[0m [38;5;28;01mfrom[39;00m[38;5;250m [39m[38;5;21;01mcausalkit[39;00m[38;5;21;01m.[39;00m[38;5;21;01minference[39;00m[38;5;21;01m.[39;00m[38;5;21;01matt[39;00m[38;5;21;01m.[39;00m[38;5;21;01mbootstrap_diff_means[39;00m[38;5;250m [39m[38;5;28;01mimport[39;00m bootstrap_diff_means
[0;32m---> 11[0m [38;5;28;01mfrom[39;00m[38;5;250m [39m[38;5;21;01mcausalkit[39;00m[38;5;21;01m.[39;00m[38;5;21;01minference[39;00m[38;5;21;01m.[39;00m[38;5;21;01mate[39;00m[38;5;21;01m.[39;00m[38;5;21;01mdml_ate[39;00m[38;5;250m [39m[38;5;28;01mimport[39;00m dml_ate [38;5;28;01mas[39;00m dml
[1;32m     12[0m [38;5;28;01mfrom[39;00m[38;5;250m [39m[38;5;21;01mcausalkit[39;00m[38;5;21;01m.[39;00m[38;5;21;01minference[39;00m[38;5;21;01m.[39;00m[38;5;21;01mate[39;00m[38;5;21;01m.[39;00m[38;5;21;01mcausalforestdml[39;00m[38;5;250m [39m[38;5;28;01mimport[39;00m causalforestdml [38;5;28;01mas[39;00m causalforestdml
[1;32m     13[0m [38;5;28;01mfrom[39;00m[38;5;250m [39m[38;5;21;01mcausalkit[39;00m[38;5;21;01m.[39;00m[38;5;21;01minference[39;00m[38;5;21;01m.[39;00m[38;5;21;01matt[39;00m[38;5;21;01m.[39;00m[38;5;21;01mdml_att[39;00m[38;5;250m [39m[38;5;28;01mimport[39;00m dml_att [38;5;28;01mas[39;00m dml_att

File [0;32m~/work/CausalKit/CausalKit/causalkit/inference/ate/__init__.py:7[0m
[1;32m      1[0m [38;5;124;03m"""[39;00m
[1;32m      2[0m [38;5;124;03mAverage Treatment Effect (ATE) inference methods for causalkit.[39;00m
[1;32m      3[0m 
[1;32m      4[0m [38;5;124;03mThis module provides methods for estimating average treatment effects.[39;00m
[1;32m      5[0m [38;5;124;03m"""[39;00m
[0;32m----> 7[0m [38;5;28;01mfrom[39;00m[38;5;250m [39m[38;5;21;01mcausalkit[39;00m[38;5;21;01m.[39;00m[38;5;21;01minference[39;00m[38;5;21;01m.[39;00m[38;5;21;01mate[39;00m[38;5;21;01m.[39;00m[38;5;21;01mdml_ate[39;00m[38;5;250m [39m[38;5;28;01mimport[39;00m dml_ate
[1;32m      8[0m [38;5;28;01mfrom[39;00m[38;5;250m [39m[38;5;21;01mcausalkit[39;00m[38;5;21;01m.[39;00m[38;5;21;01minference[39;00m[38;5;21;01m.[39;00m[38;5;21;01mate[39;00m[38;5;21;01m.[39;00m[38;5;21;01mcausalforestdml[39;00m[38;5;250m [39m[38;5;28;01mimport[39;00m causalforestdml
[1;32m     10[0m __all__ [38;5;241m=[39m [[38;5;124m'[39m[38;5;124mdml_ate[39m[38;5;124m'[39m, [38;5;124m'[39m[38;5;124mcausalforestdml[39m[38;5;124m'[39m]

File [0;32m~/work/CausalKit/CausalKit/causalkit/inference/ate/dml_ate.py:13[0m
[1;32m     10[0m [38;5;28;01mfrom[39;00m[38;5;250m [39m[38;5;21;01mtyping[39;00m[38;5;250m [39m[38;5;28;01mimport[39;00m Dict, Any, Optional, Union, List, Tuple
[1;32m     12[0m [38;5;28;01mimport[39;00m[38;5;250m [39m[38;5;21;01mdoubleml[39;00m[38;5;250m [39m[38;5;28;01mas[39;00m[38;5;250m [39m[38;5;21;01mdoubleml[39;00m
[0;32m---> 13[0m [38;5;28;01mfrom[39;00m[38;5;250m [39m[38;5;21;01mcatboost[39;00m[38;5;250m [39m[38;5;28;01mimport[39;00m CatBoostRegressor, CatBoostClassifier
[1;32m     14[0m [38;5;28;01mfrom[39;00m[38;5;250m [39m[38;5;21;01msklearn[39;00m[38;5;21;01m.[39;00m[38;5;21;01mensemble[39;00m[38;5;250m [39m[38;5;28;01mimport[39;00m RandomForestRegressor, RandomForestClassifier
[1;32m     16[0m [38;5;28;01mfrom[39;00m[38;5;250m [39m[38;5;21;01mcausalkit[39;00m[38;5;21;01m.[39;00m[38;5;21;01mdata[39;00m[38;5;21;01m.[39;00m[38;5;21;01mcausaldata[39;00m[38;5;250m [39m[38;5;28;01mimport[39;00m CausalData

[0;31mModuleNotFoundError[0m: No module named 'catboost'

