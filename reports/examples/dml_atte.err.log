Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/jupyter_core/utils/__init__.py", line 154, in wrapped
    asyncio.get_running_loop()
RuntimeError: no running event loop

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/nbclient/client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/jupyter_core/utils/__init__.py", line 158, in wrapped
    return loop.run_until_complete(inner)
  File "/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from causalkit.data import CausalDatasetGenerator, CausalData

# Reproducibility
np.random.seed(42)

confounder_specs = [
    {"name": "tenure_months", "dist": "normal", "mu": 24, "sd": 12},
    {"name": "avg_sessions_week", "dist": "normal", "mu": 5, "sd": 2},
    {"name": "spend_last_month", "dist": "uniform", "a": 0, "b": 200},
    {"name": "premium_user", "dist": "bernoulli", "p": 0.25},
    {"name": "urban_resident", "dist": "bernoulli", "p": 0.60},
]

# Causal effect and noise
theta = 1.8  # ATE: +1.8 ARPU units if new_feature = 1
sigma_y = 3.5  # ARPU noise std
target_t_rate = 0.35  # ~35% treated

# Effects of confounders on ARPU (baseline, additive)
# Order: tenure_months, avg_sessions_week, spend_last_month, premium_user, urban_resident
beta_y = np.array([
    0.05,  # tenure_months: small positive effect
    0.40,  # avg_sessions_week: strong positive effect
    0.02,  # spend_last_month: recent spend correlates with ARPU
    2.00,  # premium_user: premium users have higher ARPU
    1.00,  # urban_resident: urban users slightly higher ARPU
], dtype=float)

# Effects of confounders on treatment assignment (log-odds scale)
beta_t = np.array([
    0.015,  # tenure_months
    0.10,  # avg_sessions_week
    0.002,  # spend_last_month
    0.75,  # premium_user
    0.30,  # urban_resident: more likely to get the feature
], dtype=float)

gen = CausalDatasetGenerator(
    theta=theta,
    outcome_type="continuous",
    sigma_y=sigma_y,
    target_t_rate=target_t_rate,
    seed=42,
    confounder_specs=confounder_specs,
    beta_y=beta_y,
    beta_t=beta_t,
)


# Create dataset
causal_data = gen.to_causal_data(
    n=10000,
    confounders = [
    "tenure_months",
    "avg_sessions_week",
    "spend_last_month",
    "premium_user",
    "urban_resident",
]
)

# Show first few rows
causal_data.df.head()

------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mTypeError[0m                                 Traceback (most recent call last)
Cell [0;32mIn[1], line 41[0m
[1;32m     32[0m [38;5;66;03m# Effects of confounders on treatment assignment (log-odds scale)[39;00m
[1;32m     33[0m beta_t [38;5;241m=[39m np[38;5;241m.[39marray([
[1;32m     34[0m     [38;5;241m0.015[39m,  [38;5;66;03m# tenure_months[39;00m
[1;32m     35[0m     [38;5;241m0.10[39m,  [38;5;66;03m# avg_sessions_week[39;00m
[0;32m   (...)[0m
[1;32m     38[0m     [38;5;241m0.30[39m,  [38;5;66;03m# urban_resident: more likely to get the feature[39;00m
[1;32m     39[0m ], dtype[38;5;241m=[39m[38;5;28mfloat[39m)
[0;32m---> 41[0m gen [38;5;241m=[39m [43mCausalDatasetGenerator[49m[43m([49m
[1;32m     42[0m [43m    [49m[43mtheta[49m[38;5;241;43m=[39;49m[43mtheta[49m[43m,[49m
[1;32m     43[0m [43m    [49m[43moutcome_type[49m[38;5;241;43m=[39;49m[38;5;124;43m"[39;49m[38;5;124;43mcontinuous[39;49m[38;5;124;43m"[39;49m[43m,[49m
[1;32m     44[0m [43m    [49m[43msigma_y[49m[38;5;241;43m=[39;49m[43msigma_y[49m[43m,[49m
[1;32m     45[0m [43m    [49m[43mtarget_t_rate[49m[38;5;241;43m=[39;49m[43mtarget_t_rate[49m[43m,[49m
[1;32m     46[0m [43m    [49m[43mseed[49m[38;5;241;43m=[39;49m[38;5;241;43m42[39;49m[43m,[49m
[1;32m     47[0m [43m    [49m[43mconfounder_specs[49m[38;5;241;43m=[39;49m[43mconfounder_specs[49m[43m,[49m
[1;32m     48[0m [43m    [49m[43mbeta_y[49m[38;5;241;43m=[39;49m[43mbeta_y[49m[43m,[49m
[1;32m     49[0m [43m    [49m[43mbeta_t[49m[38;5;241;43m=[39;49m[43mbeta_t[49m[43m,[49m
[1;32m     50[0m [43m)[49m
[1;32m     53[0m [38;5;66;03m# Create dataset[39;00m
[1;32m     54[0m causal_data [38;5;241m=[39m gen[38;5;241m.[39mto_causal_data(
[1;32m     55[0m     n[38;5;241m=[39m[38;5;241m10000[39m,
[1;32m     56[0m     confounders [38;5;241m=[39m [
[0;32m   (...)[0m
[1;32m     62[0m ]
[1;32m     63[0m )

[0;31mTypeError[0m: CausalDatasetGenerator.__init__() got an unexpected keyword argument 'target_t_rate'

