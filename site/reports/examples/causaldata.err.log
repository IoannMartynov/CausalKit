Traceback (most recent call last):
  File "/Users/ioannmartynov/miniconda3/envs/causalkit/lib/python3.13/site-packages/jupyter_core/utils/__init__.py", line 154, in wrapped
    asyncio.get_running_loop()
    ~~~~~~~~~~~~~~~~~~~~~~~~^^
RuntimeError: no running event loop

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/ioannmartynov/miniconda3/envs/causalkit/lib/python3.13/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
    ~~~~~~~~~^
        nb,
        ^^^
    ...<4 lines>...
        **kwargs,
        ^^^^^^^^^
    )
    ^
  File "/Users/ioannmartynov/miniconda3/envs/causalkit/lib/python3.13/site-packages/nbclient/client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/Users/ioannmartynov/miniconda3/envs/causalkit/lib/python3.13/site-packages/jupyter_core/utils/__init__.py", line 158, in wrapped
    return loop.run_until_complete(inner)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^
  File "/Users/ioannmartynov/miniconda3/envs/causalkit/lib/python3.13/asyncio/base_events.py", line 725, in run_until_complete
    return future.result()
           ~~~~~~~~~~~~~^^
  File "/Users/ioannmartynov/miniconda3/envs/causalkit/lib/python3.13/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
        cell, index, execution_count=self.code_cells_executed + 1
    )
  File "/Users/ioannmartynov/miniconda3/envs/causalkit/lib/python3.13/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/ioannmartynov/miniconda3/envs/causalkit/lib/python3.13/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
df == df_test
------------------


[31m---------------------------------------------------------------------------[39m
[31mValueError[39m                                Traceback (most recent call last)
[32m/var/folders/m0/gys_jqqj44n801p04bgv_ct00000gn/T/ipykernel_18107/2734448559.py[39m in [36m?[39m[34m()[39m
[32m----> [39m[32m1[39m df == df_test

[32m~/miniconda3/envs/causalkit/lib/python3.13/site-packages/pandas/core/ops/common.py[39m in [36m?[39m[34m(self, other)[39m
[32m     72[39m                     [38;5;28;01mreturn[39;00m NotImplemented
[32m     73[39m 
[32m     74[39m         other = item_from_zerodim(other)
[32m     75[39m 
[32m---> [39m[32m76[39m         [38;5;28;01mreturn[39;00m method(self, other)

[32m~/miniconda3/envs/causalkit/lib/python3.13/site-packages/pandas/core/arraylike.py[39m in [36m?[39m[34m(self, other)[39m
[32m     38[39m     @unpack_zerodim_and_defer([33m"__eq__"[39m)
[32m     39[39m     [38;5;28;01mdef[39;00m __eq__(self, other):
[32m---> [39m[32m40[39m         [38;5;28;01mreturn[39;00m self._cmp_method(other, operator.eq)

[32m~/miniconda3/envs/causalkit/lib/python3.13/site-packages/pandas/core/frame.py[39m in [36m?[39m[34m(self, other, op)[39m
[32m   7901[39m     [38;5;28;01mdef[39;00m _cmp_method(self, other, op):
[32m   7902[39m         axis: Literal[[32m1[39m] = [32m1[39m  [38;5;66;03m# only relevant for Series other case[39;00m
[32m   7903[39m 
[32m-> [39m[32m7904[39m         self, other = self._align_for_op(other, axis, flex=[38;5;28;01mFalse[39;00m, level=[38;5;28;01mNone[39;00m)
[32m   7905[39m 
[32m   7906[39m         [38;5;66;03m# See GH#4537 for discussion of scalar op behavior[39;00m
[32m   7907[39m         new_data = self._dispatch_frame_op(other, op, axis=axis)

[32m~/miniconda3/envs/causalkit/lib/python3.13/site-packages/pandas/core/frame.py[39m in [36m?[39m[34m(self, other, axis, flex, level)[39m
[32m   8199[39m                     left, right = left.align(
[32m   8200[39m                         right, join=[33m"outer"[39m, level=level, copy=[38;5;28;01mFalse[39;00m
[32m   8201[39m                     )
[32m   8202[39m                 [38;5;28;01melse[39;00m:
[32m-> [39m[32m8203[39m                     raise ValueError(
[32m   8204[39m                         [33m"Can only compare identically-labeled (both index and columns) "[39m
[32m   8205[39m                         [33m"DataFrame objects"[39m
[32m   8206[39m                     )

[31mValueError[39m: Can only compare identically-labeled (both index and columns) DataFrame objects

